export default {
  selection: undefined,
  numClientsYutResting: 0,
  gamePhase: "lobby",
  // when piece is moved to the board, it is set to null
  pieces: [
    [
      { tile: -1, team: 0, id: 0 }, // tile's possible values: -1 for home, 0 to 28, "finished"
      { tile: -1, team: 0, id: 1 },
      { tile: -1, team: 0, id: 2 },
      { tile: -1, team: 0, id: 3 },
    ],
    [
      { tile: -1, team: 1, id: 0 },
      { tile: -1, team: 1, id: 1 },
      { tile: -1, team: 1, id: 2 },
      { tile: -1, team: 1, id: 3 },
    ],
  ],
  teams: [
    {
      index: 0,
      displayName: "",
      players: [], // list of objects
      pieces: [
        { tile: -1, team: 0, id: 0, path: [] }, // null, {values} or "scored"
        { tile: -1, team: 0, id: 1, path: [] },
        { tile: -1, team: 0, id: 2, path: [] },
        { tile: -1, team: 0, id: 3, path: [] },
      ],
      moves: {
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "-1": 0
      },
      throws: 0
    },
    { 
      index: 1,
      displayName: "",
      players: [], // list of objects
      pieces: [
        { tile: -1, team: 1, id: 0, history: [] },
        { tile: -1, team: 1, id: 1, history: [] },
        { tile: -1, team: 1, id: 2, history: [] },
        { tile: -1, team: 1, id: 3, history: [] },
      ],
      moves: {
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "-1": 0
      },
      throws: 0
    }
  ],
  player: {
    socketId: -1, // generated by the connection
    index: -1, // in the 'players' list in the team
    displayName: "",
    team: -1,
    // throws: 0,
  },
  moves: {
    "1": 0,
    "2": 0,
    "3": 0,
    "4": 0,
    "5": 0,
    "-1": 0
  },
  turn: {
    team: 0,
    players: [0, 0] // list of ints
  },
  tiles: [
    [], // { pieces: [], destination: { team: 0 // -1, 0 or 1}}
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
  ],
  legalTiles: {}
  // schema
  // legalTiles: {
  //    tile (int): [
  //      { move: int, path: [int] }
  //    ],
  //    tile2: [...]
  // }
};
