/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 public/models/starfighter.glb -o src/Starfighter.jsx 
*/

import React, { useRef, useMemo } from "react";
import { SkeletonUtils } from "three-stdlib";
import { useGLTF } from "@react-three/drei";
import { useGraph } from "@react-three/fiber";

export default function Starfighter({ color, ...props }) {
  const { scene, materials } = useGLTF("/models/starfighter.glb");

  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes } = useGraph(clone);
  return (
    <group {...props} scale={0.5} dispose={null}>
      <mesh geometry={nodes["Node-Mesh"].geometry} material={materials.mat16}>
        <meshStandardMaterial color={color} />
      </mesh>
      <mesh
        geometry={nodes["Node-Mesh_1"].geometry}
        material={materials.mat5}
      />
      <mesh
        geometry={nodes["Node-Mesh_2"].geometry}
        material={materials.mat8}
      />
      <mesh
        geometry={nodes["Node-Mesh_3"].geometry}
        material={materials.mat17}
      />
      <mesh
        geometry={nodes["Node-Mesh_4"].geometry}
        material={materials.mat25}
      />
      <mesh
        geometry={nodes["Node-Mesh_5"].geometry}
        material={materials.mat24}
      />
      <mesh
        geometry={nodes["Node-Mesh_6"].geometry}
        material={materials.mat23}
      />
      <mesh
        geometry={nodes["Node-Mesh_7"].geometry}
        material={materials.mat22}
      />
      <mesh
        geometry={nodes["Node-Mesh_8"].geometry}
        material={materials.mat7}
      />
    </group>
  );
}

useGLTF.preload("/starfighter.glb");
